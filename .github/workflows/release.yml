name: goreleaser

on:
  push:
    tags:
      - "v*"

env:
  IMAGE_NAME: nomad-events-sink

jobs:
  push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      # - name: Build image
      #   run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Push image
      #   run: |
      #     IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
      #     IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          
      #     VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
      #     [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          
      #     echo IMAGE_ID=$IMAGE_ID
      #     echo VERSION=$VERSION

      #     docker tag $IMAGE_NAME $IMAGE_ID:${GITHUB_SHA}
      #     docker push $IMAGE_ID:${GITHUB_SHA}

# jobs:
#   goreleaser:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2
#         with:
#           fetch-depth: 0
#       - name: Set up Go
#         uses: actions/setup-go@v2
#         with:
#           go-version: 1.17
#       - name: Login to GitHub Container Registry
#         uses: docker/login-action@v1
#         with:
#           registry: ghcr.io
#           username: ${{ github.repository_owner }}
#           password: ${{ secrets.GH_GORELEASER_TOKEN }}
#       - name: Run GoReleaser
#         uses: goreleaser/goreleaser-action@v2
#         with:
#           version: latest
#           args: release --rm-dist
#         env:
#           GITHUB_TOKEN: ${{ secrets.GH_GORELEASER_TOKEN }}
